// Code generated by MockGen. DO NOT EDIT.
// Source: appolo-register/internal/services/materials (interfaces: Storage)
//
// Generated by this command:
//
//	mockgen -destination ./mocks/storage_mock.go appolo-register/internal/services/materials Storage
//

// Package mock_materials is a generated GoMock package.
package mock_materials

import (
	domain "appolo-register/internal/domain"
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// MaterialById mocks base method.
func (m *MockStorage) MaterialById(arg0 context.Context, arg1 uint64) (*domain.Material, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MaterialById", arg0, arg1)
	ret0, _ := ret[0].(*domain.Material)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MaterialById indicates an expected call of MaterialById.
func (mr *MockStorageMockRecorder) MaterialById(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MaterialById", reflect.TypeOf((*MockStorage)(nil).MaterialById), arg0, arg1)
}

// MaterialsByTags mocks base method.
func (m *MockStorage) MaterialsByTags(arg0 context.Context, arg1 []string) ([]*domain.Material, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MaterialsByTags", arg0, arg1)
	ret0, _ := ret[0].([]*domain.Material)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MaterialsByTags indicates an expected call of MaterialsByTags.
func (mr *MockStorageMockRecorder) MaterialsByTags(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MaterialsByTags", reflect.TypeOf((*MockStorage)(nil).MaterialsByTags), arg0, arg1)
}

// Save mocks base method.
func (m *MockStorage) Save(arg0 context.Context, arg1 *domain.Material) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockStorageMockRecorder) Save(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockStorage)(nil).Save), arg0, arg1)
}
